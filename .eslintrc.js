module.exports = {
  ignorePatterns: ['.eslintrc.js'],
  // plugins: ['eslint-plugin-import', '@typescript-eslint', '@typescript-eslint/tslint', 'prettier'],
  extends: [
    // 'airbnb-typescript/base',
    // 'plugin:@typescript-eslint/recommended',
    // 'prettier',

    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/typescript',
    'prettier',
  ],
  plugins: ['prettier', '@typescript-eslint', 'import'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  overrides: [
    {
      files: ['src/**/*.js'],
    },
  ],
  rules: {
    'prettier/prettier': 'error',
    '@typescript-eslint/array-type': [
      'warn',
      {
        default: 'array',
      },
    ],
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/naming-convention': 'off',
    'no-unused-vars': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/no-unused-vars': [
      'error',
      {
        vars: 'all',
        args: 'none',
        ignoreRestSiblings: false,
      },
    ],
    '@typescript-eslint/no-use-before-define': 'warn',
    '@typescript-eslint/prefer-namespace-keyword': 'warn',
    '@typescript-eslint/require-await': 'error',
    '@typescript-eslint/semi': ['warn', 'always'],
    '@typescript-eslint/type-annotation-spacing': 'warn',
    'arrow-parens': ['warn', 'always'],
    'brace-style': 'off',
    'comma-dangle': ['warn', 'always-multiline'],
    'default-case': 'error',
    eqeqeq: ['warn', 'smart'],
    'id-denylist': [
      'warn',
      'any',
      'Number',
      'number',
      'String',
      'string',
      'Boolean',
      'boolean',
      'Undefined',
      'undefined',
    ],
    'id-match': 'warn',
    // 'import/order': 'warn',
    'no-eval': 'warn',
    'no-multiple-empty-lines': 'warn',
    'no-trailing-spaces': 'warn',
    'no-unsafe-finally': 'warn',
    'no-use-before-define': 'warn',
    'no-var': 'warn',
    semi: 'warn',
    'spaced-comment': [
      'warn',
      'always',
      {
        markers: ['/'],
      },
    ],
    // '@typescript-eslint/explicit-module-boundary-types': [
    //   'error',
    //   {
    //     allowVoid: true,
    //   },
    // ],
    // '@typescript-eslint/tslint/config': [
    //   'error',
    //   {
    //     rules: {
    //       whitespace: [
    //         true,
    //         'check-branch',
    //         'check-decl',
    //         'check-operator',
    //         'check-separator',
    //         'check-type',
    //       ],
    //     },
    //   },
    // ],
  },
};

/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
